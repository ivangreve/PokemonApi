// <auto-generated />
using System;
using Challenge.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Challenge.Migrations
{
    [DbContext(typeof(PokemonDbContext))]
    partial class PokemonDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("Challenge.Models.Entities.ExpansionSet", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Expansion")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("ExpansionSet");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2021, 12, 4, 23, 7, 33, 113, DateTimeKind.Utc).AddTicks(9675),
                            Deleted = false,
                            Expansion = "Base Set"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2021, 12, 4, 23, 7, 33, 113, DateTimeKind.Utc).AddTicks(9889),
                            Deleted = false,
                            Expansion = "Jungle"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2021, 12, 4, 23, 7, 33, 113, DateTimeKind.Utc).AddTicks(9891),
                            Deleted = false,
                            Expansion = "Fossil"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedDate = new DateTime(2021, 12, 4, 23, 7, 33, 113, DateTimeKind.Utc).AddTicks(9892),
                            Deleted = false,
                            Expansion = "Base Set 2"
                        });
                });

            modelBuilder.Entity("Challenge.Models.Entities.Pokemon", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CardCreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ExpansionSetId")
                        .HasColumnType("int");

                    b.Property<long?>("ExpansionSetId1")
                        .HasColumnType("bigint");

                    b.Property<int>("Hp")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsFirstEdition")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("PokemonRarityId")
                        .HasColumnType("int");

                    b.Property<long?>("PokemonRarityId1")
                        .HasColumnType("bigint");

                    b.Property<int>("PokemonTypeId")
                        .HasColumnType("int");

                    b.Property<long?>("PokemonTypeId1")
                        .HasColumnType("bigint");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("ExpansionSetId1");

                    b.HasIndex("PokemonRarityId1");

                    b.HasIndex("PokemonTypeId1");

                    b.ToTable("Pokemon");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CardCreationTime = new DateTime(2021, 12, 4, 20, 7, 33, 114, DateTimeKind.Local).AddTicks(1268),
                            CreatedDate = new DateTime(2021, 12, 4, 23, 7, 33, 114, DateTimeKind.Utc).AddTicks(80),
                            Deleted = false,
                            ExpansionSetId = 1,
                            Hp = 100,
                            Image = "https://i.pinimg.com/originals/dc/ab/b7/dcabb7fbb2f763d680d20a3d228cc6f9.jpg",
                            IsFirstEdition = true,
                            Name = "Pikachu",
                            PokemonRarityId = 3,
                            PokemonTypeId = 4,
                            Price = 0.0
                        },
                        new
                        {
                            Id = 2L,
                            CardCreationTime = new DateTime(2021, 12, 4, 20, 7, 33, 114, DateTimeKind.Local).AddTicks(1750),
                            CreatedDate = new DateTime(2021, 12, 4, 23, 7, 33, 114, DateTimeKind.Utc).AddTicks(1746),
                            Deleted = false,
                            ExpansionSetId = 1,
                            Hp = 150,
                            Image = "https://static.wikia.nocookie.net/superpokemon/images/f/f2/Charmander.jpg/revision/latest?cb=20101205152949&path-prefix=es",
                            IsFirstEdition = false,
                            Name = "Charmander",
                            PokemonRarityId = 3,
                            PokemonTypeId = 2,
                            Price = 0.0
                        });
                });

            modelBuilder.Entity("Challenge.Models.Entities.PokemonRarity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Rarity")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("PokemonRarity");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2021, 12, 4, 23, 7, 33, 113, DateTimeKind.Utc).AddTicks(9151),
                            Deleted = false,
                            Rarity = "Comun"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2021, 12, 4, 23, 7, 33, 113, DateTimeKind.Utc).AddTicks(9463),
                            Deleted = false,
                            Rarity = "No Comun"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2021, 12, 4, 23, 7, 33, 113, DateTimeKind.Utc).AddTicks(9465),
                            Deleted = false,
                            Rarity = "Raro"
                        });
                });

            modelBuilder.Entity("Challenge.Models.Entities.PokemonType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("PokemonTypes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2021, 12, 4, 23, 7, 33, 113, DateTimeKind.Utc).AddTicks(8048),
                            Deleted = false,
                            Description = "Tipo Agua",
                            Type = "Agua"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2021, 12, 4, 23, 7, 33, 113, DateTimeKind.Utc).AddTicks(8928),
                            Deleted = false,
                            Description = "Tipo de Fuego",
                            Type = "Fuego"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2021, 12, 4, 23, 7, 33, 113, DateTimeKind.Utc).AddTicks(8931),
                            Deleted = false,
                            Description = "Tipo Hierba",
                            Type = "Hierba"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedDate = new DateTime(2021, 12, 4, 23, 7, 33, 113, DateTimeKind.Utc).AddTicks(8932),
                            Deleted = false,
                            Description = "Tipo Electrico",
                            Type = "Electrico"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedDate = new DateTime(2021, 12, 4, 23, 7, 33, 113, DateTimeKind.Utc).AddTicks(8933),
                            Deleted = false,
                            Description = "Tipo Psiquico",
                            Type = "Psiquico"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedDate = new DateTime(2021, 12, 4, 23, 7, 33, 113, DateTimeKind.Utc).AddTicks(8934),
                            Deleted = false,
                            Description = "Tipo Normal",
                            Type = "Normal"
                        });
                });

            modelBuilder.Entity("Challenge.Models.Entities.Pokemon", b =>
                {
                    b.HasOne("Challenge.Models.Entities.ExpansionSet", "ExpansionSet")
                        .WithMany()
                        .HasForeignKey("ExpansionSetId1");

                    b.HasOne("Challenge.Models.Entities.PokemonRarity", "PokemonRarity")
                        .WithMany()
                        .HasForeignKey("PokemonRarityId1");

                    b.HasOne("Challenge.Models.Entities.PokemonType", "PokemonType")
                        .WithMany()
                        .HasForeignKey("PokemonTypeId1");

                    b.Navigation("ExpansionSet");

                    b.Navigation("PokemonRarity");

                    b.Navigation("PokemonType");
                });
#pragma warning restore 612, 618
        }
    }
}
