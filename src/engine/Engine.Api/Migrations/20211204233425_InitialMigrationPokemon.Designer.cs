// <auto-generated />
using System;
using Challenge.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Challenge.Migrations
{
    [DbContext(typeof(PokemonDbContext))]
    [Migration("20211204233425_InitialMigrationPokemon")]
    partial class InitialMigrationPokemon
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("Challenge.Models.Entities.ExpansionSet", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Expansion")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("ExpansionSet");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2021, 12, 4, 23, 34, 25, 425, DateTimeKind.Utc).AddTicks(2680),
                            Deleted = false,
                            Expansion = "Base Set"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2021, 12, 4, 23, 34, 25, 425, DateTimeKind.Utc).AddTicks(2894),
                            Deleted = false,
                            Expansion = "Jungle"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2021, 12, 4, 23, 34, 25, 425, DateTimeKind.Utc).AddTicks(2896),
                            Deleted = false,
                            Expansion = "Fossil"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedDate = new DateTime(2021, 12, 4, 23, 34, 25, 425, DateTimeKind.Utc).AddTicks(2897),
                            Deleted = false,
                            Expansion = "Base Set 2"
                        });
                });

            modelBuilder.Entity("Challenge.Models.Entities.Pokemon", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CardCreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("ExpansionSetId")
                        .HasColumnType("bigint");

                    b.Property<int>("Hp")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsFirstEdition")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<long>("PokemonRarityId")
                        .HasColumnType("bigint");

                    b.Property<long>("PokemonTypeId")
                        .HasColumnType("bigint");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("ExpansionSetId");

                    b.HasIndex("PokemonRarityId");

                    b.HasIndex("PokemonTypeId");

                    b.ToTable("Pokemon");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CardCreationTime = new DateTime(2021, 12, 4, 20, 34, 25, 425, DateTimeKind.Local).AddTicks(4564),
                            CreatedDate = new DateTime(2021, 12, 4, 23, 34, 25, 425, DateTimeKind.Utc).AddTicks(3084),
                            Deleted = false,
                            ExpansionSetId = 1L,
                            Hp = 100,
                            Image = "https://i.pinimg.com/originals/dc/ab/b7/dcabb7fbb2f763d680d20a3d228cc6f9.jpg",
                            IsFirstEdition = true,
                            Name = "Pikachu",
                            PokemonRarityId = 3L,
                            PokemonTypeId = 4L,
                            Price = 0.0
                        },
                        new
                        {
                            Id = 2L,
                            CardCreationTime = new DateTime(2021, 12, 4, 20, 34, 25, 425, DateTimeKind.Local).AddTicks(5233),
                            CreatedDate = new DateTime(2021, 12, 4, 23, 34, 25, 425, DateTimeKind.Utc).AddTicks(5229),
                            Deleted = false,
                            ExpansionSetId = 1L,
                            Hp = 150,
                            Image = "https://static.wikia.nocookie.net/superpokemon/images/f/f2/Charmander.jpg/revision/latest?cb=20101205152949&path-prefix=es",
                            IsFirstEdition = false,
                            Name = "Charmander",
                            PokemonRarityId = 3L,
                            PokemonTypeId = 2L,
                            Price = 0.0
                        });
                });

            modelBuilder.Entity("Challenge.Models.Entities.PokemonRarity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Rarity")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("PokemonRarity");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2021, 12, 4, 23, 34, 25, 425, DateTimeKind.Utc).AddTicks(2256),
                            Deleted = false,
                            Rarity = "Comun"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2021, 12, 4, 23, 34, 25, 425, DateTimeKind.Utc).AddTicks(2484),
                            Deleted = false,
                            Rarity = "No Comun"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2021, 12, 4, 23, 34, 25, 425, DateTimeKind.Utc).AddTicks(2487),
                            Deleted = false,
                            Rarity = "Raro"
                        });
                });

            modelBuilder.Entity("Challenge.Models.Entities.PokemonTypes", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("PokemonTypes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2021, 12, 4, 23, 34, 25, 425, DateTimeKind.Utc).AddTicks(1184),
                            Deleted = false,
                            Description = "Tipo Agua",
                            Type = "Agua"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2021, 12, 4, 23, 34, 25, 425, DateTimeKind.Utc).AddTicks(1987),
                            Deleted = false,
                            Description = "Tipo de Fuego",
                            Type = "Fuego"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2021, 12, 4, 23, 34, 25, 425, DateTimeKind.Utc).AddTicks(1991),
                            Deleted = false,
                            Description = "Tipo Hierba",
                            Type = "Hierba"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedDate = new DateTime(2021, 12, 4, 23, 34, 25, 425, DateTimeKind.Utc).AddTicks(1992),
                            Deleted = false,
                            Description = "Tipo Electrico",
                            Type = "Electrico"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedDate = new DateTime(2021, 12, 4, 23, 34, 25, 425, DateTimeKind.Utc).AddTicks(1994),
                            Deleted = false,
                            Description = "Tipo Psiquico",
                            Type = "Psiquico"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedDate = new DateTime(2021, 12, 4, 23, 34, 25, 425, DateTimeKind.Utc).AddTicks(1995),
                            Deleted = false,
                            Description = "Tipo Normal",
                            Type = "Normal"
                        });
                });

            modelBuilder.Entity("Challenge.Models.Entities.Pokemon", b =>
                {
                    b.HasOne("Challenge.Models.Entities.ExpansionSet", "ExpansionSet")
                        .WithMany()
                        .HasForeignKey("ExpansionSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Challenge.Models.Entities.PokemonRarity", "PokemonRarity")
                        .WithMany()
                        .HasForeignKey("PokemonRarityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Challenge.Models.Entities.PokemonTypes", "PokemonTypes")
                        .WithMany()
                        .HasForeignKey("PokemonTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExpansionSet");

                    b.Navigation("PokemonRarity");

                    b.Navigation("PokemonTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
